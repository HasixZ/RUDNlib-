import logging
from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import (
    ApplicationBuilder, ContextTypes, CommandHandler, MessageHandler,
    filters
)


logging.basicConfig(format='%(asctime)s - %(name)s - %(—É—Ä–æ–≤–µ–Ω—å) - %(message)s', level=logging.INFO)
logging.getLogger('httpx').setLevel(logging.WARNING)

TOKEN = "7016855818:AAF3avDohdL9wnUzGD6I82SNoaIYMLaX_JY"

START_ROUTES, END_ROUTES = range(2)

# Define state constants
ONE, TWO, THREE, FOUR, FIVE, MENU, MAIN_MENU = range(7)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    first_name = update.message.chat.first_name
    await context.bot.send_message(chat_id=update.effective_chat.id,
                                   text=f"–ü—Ä–∏–≤–µ—Ç, {first_name}! –Ø —á–∞—Ç-–±–æ—Ç –ù–∞—É—á–Ω–æ–π –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –†–£–î–ù. –ß–µ–º –º–æ–≥—É –±—ã—Ç—å –ø–æ–ª–µ–∑–µ–Ω? –í–≤–µ–¥–∏—Ç–µ /menu –¥–ª—è –Ω–∞—á–∞–ª–∞.")

async def help(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await context.bot.send_message(chat_id=update.effective_chat.id,
                                   text=(f"–í –¥–∞–Ω–Ω–æ–π –≤–µ—Ä—Å–∏–∏ –±–æ—Ç–∞ –¥–æ—Å—Ç—É–ø–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã:\n"
                                         f"/help - —Å–ø—Ä–∞–≤–∫–∞ –æ –∫–æ–º–∞–Ω–¥–∞—Ö\n"
                                         f"/q - –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å\n"
                                         f"/feedback - –æ—Å—Ç–∞–≤–∏—Ç—å —Å–≤–æ–∏ –º–Ω–µ–Ω–∏—è –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–æ —É–ª—É—á—à–µ–Ω–∏—é –±–æ—Ç–∞\n"
                                         f"/menu - –º–µ–Ω—é—à–∫–∞"))

async def question(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_arg = " ".join(context.args)
    answer = accresp(user_arg)
    await context.bot.send_message(chat_id=update.effective_chat.id, text=answer)

async def feedback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = ' '.join(context.args)
    userid = update.message.from_user.id
    addfeedback(text, userid)
    await context.bot.send_message(chat_id=update.effective_chat.id, text='–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à–µ –º–Ω–µ–Ω–∏–µ!')

async def main_menu(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        ["–í–æ–ø—Ä–æ—Å—ã‚ùì", "–ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞üìû"]
    ]
    reply_markup = ReplyKeyboardMarkup(keyboard, one_time_keyboard=True, resize_keyboard=True)
    await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ:", reply_markup=reply_markup)
    return START_ROUTES

async def handle_books(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        ["—Å–¥–∞—Ç—å –∫–Ω–∏–≥—É", "–∑–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç—å"],
        ["–ø–æ—Ç–µ—Ä—è–ª –∫–Ω–∏–≥—É", "–ø—Ä–æ–¥–ª–∏—Ç—å –∫–Ω–∏–≥—É"],
        ["–Ω–µ —É—Å–ø–µ–ª —Å–¥–∞—Ç—å –∫–Ω–∏–≥—É", "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é"]
    ]
    reply_markup = ReplyKeyboardMarkup(keyboard, one_time_keyboard=True, resize_keyboard=True)
    await update.message.reply_text("–í—ã–±–µ—Ä–µ—Ç–µ –≤–æ–ø—Ä–æ—Å –ø—Ä–æ –∫–Ω–∏–≥—É:", reply_markup=reply_markup)
    return START_ROUTES

async def handle_library(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        ["—á—Ç–æ —Ç–∞–∫–æ–µ –Ω–±", "–∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –±–∏–±–ª–∏–æ—Ç–µ–∫–∞"],
        ["–±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –≥–ª–∞–≤–Ω–æ–≥–æ –∫–æ—Ä–ø—É—Å–∞", "—á—Ç–æ —Ç–∞–∫–æ–µ —É–Ω–∏–±—Ü"],
        ["—Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã –±–∏–±–ª–∏–æ—Ç–µ–∫–∏", "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é"]
    ]
    reply_markup = ReplyKeyboardMarkup(keyboard, one_time_keyboard=True, resize_keyboard=True)
    await update.message.reply_text("–í—ã–±–µ—Ä–µ—Ç–µ –≤–æ–ø—Ä–æ—Å –ø—Ä–æ –±–∏–±–ª–∏–æ—Ç–µ–∫—É:", reply_markup=reply_markup)
    return START_ROUTES

async def handle_ud(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        ["—É–¥–∞–ª–µ–Ω–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫", "—ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é"],
        ["—É–¥–æ—Å—Ç—É–ø –≤ –±–∞–∑—ã", "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é"]
    ]
    reply_markup = ReplyKeyboardMarkup(keyboard, one_time_keyboard=True, resize_keyboard=True)
    await update.message.reply_text("–í—ã–±–µ—Ä–µ—Ç–µ –≤–æ–ø—Ä–æ—Å –ø—Ä–æ –£–¥:", reply_markup=reply_markup)
    return START_ROUTES

async def handle_ebs(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        ["—á—Ç–æ —Ç–∞–∫–æ–µ —ç–±—Å", "–≤—Ö–æ–¥ –≤ —ç–±—Å"],
        ["–ø–æ–º–æ—â—å –≤ —ç–±—Å", "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é"]
    ]
    reply_markup = ReplyKeyboardMarkup(keyboard, one_time_keyboard=True, resize_keyboard=True)
    await update.message.reply_text("–í—ã–±–µ—Ä–µ—Ç–µ –≤–æ–ø—Ä–æ—Å –ø—Ä–æ –≠–ë–°:", reply_markup=reply_markup)
    return START_ROUTES

async def handle_other(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        ["–ø–æ–¥–ø–∏—Å–∞—Ç—å –æ–±—Ö–æ–¥–Ω–æ–π –ª–∏—Å—Ç", "—Å–¥–∞—Ç—å –¥–∏—Å—Å–µ—Ä—Ç–∞—Ü–∏—é"],
        ["–º–µ—Å—Ç–æ –¥–ª—è –º—É—Å—É–ª—å–º–∞–Ω", "–∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –≤ –¢–£–ò–° –†–£–î–ù", "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é"]
    ]
    reply_markup = ReplyKeyboardMarkup(keyboard, one_time_keyboard=True, resize_keyboard=True)
    await update.message.reply_text("–í—ã–±–µ—Ä–µ—Ç–µ –≤–æ–ø—Ä–æ—Å:", reply_markup=reply_markup)
    return START_ROUTES

# Handlers for specific book questions
async def book_surrender(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        """
    1. –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –≤ –≥–ª–∞–≤–Ω–æ–º –∫–æ—Ä–ø—É—Å–µ —É–ª. –ú–∏–∫–ª—É—Ö–æ-–ú–∞–∫–ª–∞—è, 6
        –ø–Ω-—á—Ç ‚Äì 11.00-17.45
        –ø—Ç - 11.00-16.45
        —Å–± - 13.00-16.45
    2. –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –∏–Ω–∂–µ–Ω–µ—Ä–Ω–æ–π –∞–∫–∞–¥–µ–º–∏–∏ –∏ —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–∞ —Ñ–∏–∑–∏–∫–æ-–º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –∏ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –Ω–∞—É–∫ —É–ª. –û—Ä–¥–∂–æ–Ω–∏–∫–∏–¥–∑–µ, 3
        –ø–Ω-—á—Ç ‚Äì 11.00-17.45
        –ø—Ç - 11.00-16.45
    3. –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –∏–Ω—Å—Ç–∏—Ç—É—Ç–∞ —Ä—É—Å—Å–∫–æ–≥–æ —è–∑—ã–∫–∞, —É–ª. –ú–∏–∫–ª—É—Ö–æ-–ú–∞–∫–ª–∞—è, 10 –∫.2
        –ø–Ω ‚Äì –ø—Ç 12.30 ‚Äì 17.30
        """
    )
async def book_debt(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤—ã–¥–∞–Ω–Ω—ã—Ö –∫–Ω–∏–≥–∞—Ö –∏ —Å—Ä–æ–∫–∞—Ö –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –í–∞—à–µ–º –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ –∞–¥—Ä–µ—Å—É https://lib.rudn.ru/MegaPro/Web –∏ –∞–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—å —á–µ—Ä–µ–∑ PASSPORT.RUDN, –≥–¥–µ –ª–æ–≥–∏–Ω ‚Äì –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–∞—è —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞, –ø–∞—Ä–æ–ª—å ‚Äì –ø–∞—Ä–æ–ª—å –æ—Ç –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–π —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç—ã.")

async def book_lost(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –±–∏–±–ª–∏–æ—Ç–µ–∫—É –ª–∏—á–Ω–æ –∏–ª–∏ –ø–æ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç–µ library@rudn.ru. –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞—Ä—å –ø–æ–¥—Å–∫–∞–∂–µ—Ç, –∫–∞–∫–æ–π –∏–º–µ–Ω–Ω–æ –∫–Ω–∏–≥–æ–π –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞–º–µ–Ω–∏—Ç—å —É—Ç–µ—Ä—è–Ω–Ω—É—é. –≠—Ç–æ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å, –≤ —Ç–æ–º —á–∏—Å–ª–µ, —á–µ—Ä–µ–∑ —É–¥–∞–ª–µ–Ω–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã.")

async def book_extend(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–£–∫–∞–∂–∏—Ç–µ —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ: –§–ò–û, –Ω–æ–º–µ—Ä —Å—Ç—É–¥–µ–Ω—á–µ—Å–∫–æ–≥–æ –±–∏–ª–µ—Ç–∞, —Ñ–∞–∫—É–ª—å—Ç–µ—Ç –∏ –∫—É—Ä—Å. –ú—ã –ø—Ä–æ–¥–ª–∏–º –∫–Ω–∏–≥–∏, –µ—Å–ª–∏ —ç—Ç–æ –≤–æ–∑–º–æ–∂–Ω–æ. –ò–ª–∏ –Ω–∞–ø–∏—à–µ–º –í–∞–º –æ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø—Ä–æ–¥–ª–µ–Ω–∏—è.")

async def book_not_in_time(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–í —Å–ª—É—á–∞–µ –Ω–∞—Ä—É—à–µ–Ω–∏—è —Å—Ä–æ–∫–æ–≤ –≤–æ–∑–≤—Ä–∞—Ç–∞ –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä—ã –í–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∫–∞–∫ –º–æ–∂–Ω–æ —Ä–∞–Ω—å—à–µ –ø—Ä–∏–Ω–µ—Å—Ç–∏ –∫–Ω–∏–≥—É –≤ –±–∏–±–ª–∏–æ—Ç–µ–∫—É. –°–æ–≥–ª–∞—Å–Ω–æ –ø. 5.2 –ü—Ä–∞–≤–∏–ª –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –£–ù–ò–ë–¶ (–ù–∞—É—á–Ω–æ–π –±–∏–±–ª–∏–æ—Ç–µ–∫–æ–π), –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ—Å—É—Ç –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –∑–∞ –Ω–∞—Ä—É—à–µ–Ω–∏–µ —Å—Ä–æ–∫–æ–≤ –≤–æ–∑–≤—Ä–∞—Ç–∞ –∏–ª–∏ –ø–µ—Ä–µ—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä—ã, –∏ –º–æ–≥—É—Ç –±—ã—Ç—å –ª–∏—à–µ–Ω—ã –ø—Ä–∞–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ä–µ—Å—É—Ä—Å–∞–º–∏ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ —Å—Ä–æ–∫–æ–º –æ—Ç 1 –¥–æ 6 –º–µ—Å—è—Ü–µ–≤ –ø–æ —Ä–µ—à–µ–Ω–∏—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏ –£–ù–ò–ë–¶ (–ù–ë). –û—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—ã–¥–∞–Ω–Ω—ã—Ö –∫–Ω–∏–≥–∞—Ö –∏ —Å—Ä–æ–∫–∞—Ö –∏—Ö –≤–æ–∑–≤—Ä–∞—Ç–∞ –í—ã –º–æ–∂–µ—Ç–µ –≤ –õ–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏.")

# Handlers for specific library questions
async def library_nb(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ù–∞—É—á–Ω–∞—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ (–ù–ë) - —ç—Ç–æ –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ—Å—Ç–æ —Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞—É—á–Ω–æ–π –∏ —É—á–µ–±–Ω–æ–π –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä—ã –≤ –Ω–∞—à–µ–º —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–µ.")

async def library_how_it_works(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        """
    –í—Å–µ –æ—Ç–¥–µ–ª—ã –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ —Ä–∞–±–æ—Ç–∞—é—Ç
        –ø–Ω-—á—Ç —Å 11.00 –¥–æ 17.45
        –ø—Ç —Å 11.00 –¥–æ 16.45
        —Å–± —Å 13.00 –¥–æ 16.45.
        """
    )

async def library_main_building(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–í—Å–µ —Å—Ç—É–¥–µ–Ω—Ç—ã –∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏ –º–æ–≥—É—Ç –±—Ä–∞—Ç—å –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä—É –≤ –ª—é–±–æ–º –æ—Ç–¥–µ–ª–µ –Ω–∞—à–µ–π –±–∏–±–ª–∏–æ—Ç–µ–∫–∏")

async def library_unibc(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–£–ù–ò–ë–¶ (–ù–ë) ‚Äì —ç—Ç–æ –£—á–µ–±–Ω–æ-–Ω–∞—É—á–Ω—ã–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–π –±–∏–±–ª–∏–æ—Ç–µ—á–Ω—ã–π —Ü–µ–Ω—Ç—Ä (–ù–∞—É—á–Ω–∞—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∞) –†–£–î–ù.")

async def library_hours(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        """
    1. –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –≤ –≥–ª–∞–≤–Ω–æ–º –∫–æ—Ä–ø—É—Å–µ —É–ª. –ú–∏–∫–ª—É—Ö–æ-–ú–∞–∫–ª–∞—è, 6
        –ø–Ω-—á—Ç ‚Äì 11.00-17.45
        –ø—Ç - 11.00-16.45
        —Å–± - 13.00-16.45
    2. –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –∏–Ω–∂–µ–Ω–µ—Ä–Ω–æ–π –∞–∫–∞–¥–µ–º–∏–∏ –∏ —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–∞ —Ñ–∏–∑–∏–∫–æ-–º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –∏ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –Ω–∞—É–∫ —É–ª. –û—Ä–¥–∂–æ–Ω–∏–∫–∏–¥–∑–µ, 3
        –ø–Ω-—á—Ç ‚Äì 11.00-17.45
        –ø—Ç - 11.00-16.45
    3. –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –∏–Ω—Å—Ç–∏—Ç—É—Ç–∞ —Ä—É—Å—Å–∫–æ–≥–æ —è–∑—ã–∫–∞, —É–ª. –ú–∏–∫–ª—É—Ö–æ-–ú–∞–∫–ª–∞—è, 10 –∫.2
        –ø–Ω ‚Äì –ø—Ç 12.30 ‚Äì 17.30
        """
    )

# Handlers for specific UD questions
async def ud_remote_access(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–∫–ª—é—á–∏—Ç—å –∫–æ–º–ø—å—é—Ç–µ—Ä –∫ –ø—Ä–æ–∫—Å–∏-—Å–µ—Ä–≤–µ—Ä—É –†–£–î–ù, —Å–ª–µ–¥—É—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º –∏–∑ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–º —Ä–µ—Å—É—Ä—Å–∞–º. –ü—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –Ω–∞ —Å–∞–π—Ç—ã —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã—Ö —Ä–µ—Å—É—Ä—Å–æ–≤ –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –≤–≤–µ—Å—Ç–∏ –¥–∞–Ω–Ω—ã–µ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–π –ø–æ—á—Ç—ã –†–£–î–ù (—ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞ –¥–æ–ª–∂–Ω–∞ –∑–∞–∫–∞–Ω—á–∏–≤–∞—Ç—å—Å—è –Ω–∞ @pfur.ru).")

async def ud_electronic_version(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–í –≠–ë–° –†–£–î–ù –≤ –ø–æ–ª–µ –ü–û–ò–°–ö —Å–ª–µ–¥—É–µ—Ç –ø–æ—Å—Ç–∞–≤–∏—Ç—å –≥–∞–ª–æ—á–∫—É ÀÖ —Ä—è–¥–æ–º —Å –ø–æ–ª–µ–º '–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è'.")

async def ud_database_access(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–î–ª—è —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–∫–ª—é—á–∏—Ç—å –ø—Ä–æ–∫—Å–∏-—Å–µ—Ä–≤–µ—Ä. –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –ø–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—é –º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç–µ https://lib.rudn.ru")

# Handlers for specific EBS questions
async def ebs_what(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
    "–≠–ë–° –†–£–î–ù ‚Äì —ç—Ç–æ –≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ-–±–∏–±–ª–∏–æ—Ç–µ—á–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –†–£–î–ù. –í–∫–ª—é—á–∞–µ—Ç —É—á–µ–±–Ω–∏–∫–∏, —É—á–µ–±–Ω—ã–µ –ø–æ—Å–æ–±–∏—è, –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã–µ –ø—Ä–∞–∫—Ç–∏–∫—É–º—ã, –º–µ—Ç–æ–¥–∏—á–µ—Å–∫–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã, –º–æ–Ω–æ–≥—Ä–∞—Ñ–∏–∏, —Å—Ç–∞—Ç—å–∏ –Ω–∞ —Ä—É—Å—Å–∫–æ–º –∏ –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã—Ö —è–∑—ã–∫–∞—Ö –≤ –ø–µ—á–∞—Ç–Ω–æ–º –∏ —Ü–∏—Ñ—Ä–æ–≤–æ–º —Ñ–æ—Ä–º–∞—Ç–∞—Ö, –≤ —Ç–æ–º —á–∏—Å–ª–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π –†–£–î–ù.\n"
    "–° –ø–æ–º–æ—â—å—é –≠–ë–° –†–£–î–ù –º–æ–∂–Ω–æ –ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –ø–æ–∏—Å–∫, –æ—Ç–±–æ—Ä –∏ –∑–∞–∫–∞–∑ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–µ–π –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä—ã, –∞ —Ç–∞–∫–∂–µ –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ —Ä–∞–Ω–µ–µ –≤—ã–¥–∞–Ω–Ω—ã–º –í–∞–º –∫–Ω–∏–≥–∞–º."
)

async def ebs_login(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–í–æ–π–¥–∏—Ç–µ –≤ –≠–ë–° –†–£–î–ù https://lib.rudn.ru/MegaPro/Web –∏ –∞–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—å —á–µ—Ä–µ–∑ PASSPORT.RUDN, –≥–¥–µ –ª–æ–≥–∏–Ω ‚Äì –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–∞—è —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞, –ø–∞—Ä–æ–ª—å ‚Äì –ø–∞—Ä–æ–ª—å –æ—Ç  –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–π —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç—ã.")

async def ebs_help(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –≠–ë–°, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ —Å–ª—É–∂–±—É –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –Ω–∞—à–µ–π –±–∏–±–ª–∏–æ—Ç–µ–∫–∏.")

async def other_list(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ù–∞ –ø–æ–¥–ø–∏—Å–∞–Ω–∏–µ –æ–±—Ö–æ–¥–Ω–æ–≥–æ –ª–∏—Å—Ç–∞ –æ—Ç–≤–æ–¥–∏—Ç—Å—è 3 –¥–Ω—è. –ï—Å–ª–∏ –Ω—É–∂–Ω–æ –±—ã—Å—Ç—Ä–µ–µ, —Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞ –ø–æ—á—Ç—É –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ library@rudn.ru")

async def other_mus(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–†–£–î–ù —è–≤–ª—è–µ—Ç—Å—è —Å–≤–µ—Ç—Å–∫–∏–º —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–æ–º, –ø–æ—ç—Ç–æ–º—É –≤ —á–∏—Ç–∞–ª—å–Ω—ã—Ö –∑–∞–ª–∞—Ö –Ω–µ—Ç —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è –ø–æ –∫–æ–Ω—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–º—É –∏ –≥–µ–Ω–¥–µ—Ä–Ω–æ–º—É –ø—Ä–∏–Ω—Ü–∏–ø—É.")

async def other_dis(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–î–∏—Å—Å–µ—Ä—Ç–∞—Ü–∏—è + –¥–≤–∞ –∞–≤—Ç–æ—Ä–µ—Ñ–µ—Ä–∞—Ç–∞ –≤ —Ñ–æ–Ω–¥ –£–ù–ò–ë–¶ (–ù–ë) –ø—Ä–∏–Ω–∏–º–∞—é—Ç—Å—è –≤ —Ä–∞–±–æ—á–∏–µ –¥–Ω–∏ —Å 10.00 –¥–æ 17.45 –≤ –û—Ç–¥–µ–ª–µ –∫–æ–º–ø–ª–µ–∫—Ç–æ–≤–∞–Ω–∏—è (–≥–ª–∞–≤–Ω—ã–π –∫–æ—Ä–ø—É—Å, —Ü–æ–∫–æ–ª—å–Ω—ã–π —ç—Ç–∞–∂, –∫. 63, 64, 66 –ù–∞—É—á–Ω–æ–π –±–∏–±–ª–∏–æ—Ç–µ–∫–∏), –≤ —Å—É–±–±–æ—Ç—É —Å 13.00 –¥–æ 16.45 –≤ –æ—Ç–¥–µ–ª–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è –≤ –≥–ª–∞–≤–Ω–æ–º –∫–æ—Ä–ø—É—Å–µ.")

async def other_reg(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ –¢–£–ò–° –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è —Å –ø–æ–º–æ—â—å—é —É—á–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –æ—Ç –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–π –ø–æ—á—Ç—ã –†–£–î–ù. –ü–æ–ª—É—á–∏—Ç—å –∏—Ö –º–æ–∂–Ω–æ –∑–¥–µ—Å—å. –í–æ–π–¥–∏—Ç–µ –≤ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—É—é –ø–æ—á—Ç—É –†–£–î–ù, –∑–∞—Ç–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –≤—Ö–æ–¥–∞ –≤ –¢–£–ò–° —Å—Ä–∞–∑—É –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –í–æ–π—Ç–∏ —Å –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–º –∞–∫–∫–∞—É–Ω—Ç–æ–º.")
async def operator_transfer(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–°–≤—è–∑–∞—Ç—å—Å—è —Å –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º: @l3xs1s")

async def menu(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text

    if text == "–í–æ–ø—Ä–æ—Å—ã‚ùì":
        keyboard = [
            ["–ö–Ω–∏–≥–∏üìö", "–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞üèõÔ∏è", "–£–¥üì∂", "–≠–±—Åüõ†Ô∏è"],
            ["–ü—Ä–æ—á–µ–µ"],
            ["–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"]
        ]
        reply_markup = ReplyKeyboardMarkup(keyboard, one_time_keyboard=True, resize_keyboard=True)
        await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –≤–æ–ø—Ä–æ—Å–∞:", reply_markup=reply_markup)
        return START_ROUTES

    elif text == "–ö–Ω–∏–≥–∏üìö":
        return await handle_books(update, context)

    elif text == "–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞üèõÔ∏è":
        return await handle_library(update, context)

    elif text == "–£–¥üì∂":
        return await handle_ud(update, context)

    elif text == "–≠–±—Åüõ†Ô∏è":
        return await handle_ebs(update, context)

    elif text == "–ü—Ä–æ—á–µ–µ":
        return await handle_other(update, context)

    elif text == "–ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞üìû":
        return await operator_transfer(update, context)

    elif text == "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é":
        return await main_menu(update, context)

    elif text == "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
        return await main_menu(update, context)


    elif text == "—Å–¥–∞—Ç—å –∫–Ω–∏–≥—É":
        return await book_surrender(update, context)
    elif text == "–∑–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç—å":
        return await book_debt(update, context)
    elif text == "–ø–æ—Ç–µ—Ä—è–ª –∫–Ω–∏–≥—É":
        return await book_lost(update, context)
    elif text == "–ø—Ä–æ–¥–ª–∏—Ç—å –∫–Ω–∏–≥—É":
        return await book_extend(update, context)
    elif text == "–Ω–µ —É—Å–ø–µ–ª —Å–¥–∞—Ç—å –∫–Ω–∏–≥—É":
        return await book_not_in_time(update, context)


    elif text == "—á—Ç–æ —Ç–∞–∫–æ–µ –Ω–±":
        return await library_nb(update, context)
    elif text == "–∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –±–∏–±–ª–∏–æ—Ç–µ–∫–∞":
        return await library_how_it_works(update, context)
    elif text == "–±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –≥–ª–∞–≤–Ω–æ–≥–æ –∫–æ—Ä–ø—É—Å–∞":
        return await library_main_building(update, context)
    elif text == "—á—Ç–æ —Ç–∞–∫–æ–µ —É–Ω–∏–±—Ü":
        return await library_unibc(update, context)
    elif text == "—Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã –±–∏–±–ª–∏–æ—Ç–µ–∫–∏":
        return await library_hours(update, context)


    elif text == "—É–¥–∞–ª–µ–Ω–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫":
        return await ud_remote_access(update, context)
    elif text == "—ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é":
        return await ud_electronic_version(update, context)
    elif text == "—É–¥–æ—Å—Ç—É–ø –≤ –±–∞–∑—ã":
        return await ud_database_access(update, context)


    elif text == "—á—Ç–æ —Ç–∞–∫–æ–µ —ç–±—Å":
        return await ebs_what(update, context)
    elif text == "–≤—Ö–æ–¥ –≤ —ç–±—Å":
        return await ebs_login(update, context)
    elif text == "–ø–æ–º–æ—â—å –≤ —ç–±—Å":
        return await ebs_help(update, context)

    elif text == "–ø–æ–¥–ø–∏—Å–∞—Ç—å –æ–±—Ö–æ–¥–Ω–æ–π –ª–∏—Å—Ç":
        return await other_list(update, context)
    elif text == "—Å–¥–∞—Ç—å –¥–∏—Å—Å–µ—Ä—Ç–∞—Ü–∏—é":
        return await other_dis(update, context)
    elif text == "–º–µ—Å—Ç–æ –¥–ª—è –º—É—Å—É–ª—å–º–∞–Ω":
        return await other_mus(update, context)
    elif text == "–∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –≤ –¢–£–ò–° –†–£–î–ù":
        return await other_reg(update, context)

    else:
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.")
        return START_ROUTES

def main():
    application = ApplicationBuilder().token(TOKEN).build()

    start_handler = CommandHandler('start', start)
    question_handler = CommandHandler('q', question)
    feedback_handler = CommandHandler('feedback', feedback)
    help_handler = CommandHandler('help', help)
    main_menu_handler = CommandHandler('menu', main_menu)

    application.add_handler(start_handler)
    application.add_handler(question_handler)
    application.add_handler(feedback_handler)
    application.add_handler(help_handler)
    application.add_handler(main_menu_handler)
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, menu))

    application.run_polling()

if __name__ == '__main__':
    main()
